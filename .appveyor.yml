environment:
  SH_VERSION_SUFFIX: 'preview'

  github_auth_token:
    secure: qOQatfN0omwlCj5Td82fK9Z3ZKQom0Nv3/x6OH98iB+L9mfOf26bH3q+PnQ7y7g7

configuration: Release

image: Visual Studio 2017

for:
- branches:
    only:
      - master
  environment:
    SH_VERSION_SUFFIX: ''

before_build:
  - ps: if ($env:APPVEYOR_PULL_REQUEST_NUMBER) { Set-AppveyorBuildVariable 'SH_VERSION_SUFFIX' 'alpha' }
  - choco install "msbuild-sonarqube-runner" -y
  - cmd: nuget restore "src\SignhostAPIClient.sln

build_script:
  - ps: if ($env:APPVEYOR_PULL_REQUEST_NUMBER -and $env:github_auth_token) { MSBuild.SonarQube.Runner.exe begin /k:"SignhostAPIClient" /d:"sonar.host.url=https://sonarqube.com" /d:"sonar.organization=signhost" /d:"sonar.login=f79a82dc96828b5a4993b2f2640fca6e322c72a0" /d:"sonar.analysis.mode=preview" /d:"sonar.github.pullRequest=$env:APPVEYOR_PULL_REQUEST_NUMBER" /d:"sonar.github.repository=Evidos/SignhostClientLibrary" /d:"sonar.github.oauth=$env:github_auth_token" }
  - ps: if (-Not $env:APPVEYOR_PULL_REQUEST_NUMBER)                        { MSBuild.SonarQube.Runner.exe begin /k:"SignhostAPIClient" /d:"sonar.host.url=https://sonarqube.com" /d:"sonar.organization=signhost" /d:"sonar.login=f79a82dc96828b5a4993b2f2640fca6e322c72a0" }
  - msbuild "src\SignhostAPIClient.sln"
  - ps: if ($env:APPVEYOR_PULL_REQUEST_NUMBER -and $env:github_auth_token) { MSBuild.SonarQube.Runner.exe end /d:"sonar.login=f79a82dc96828b5a4993b2f2640fca6e322c72a0"; $LASTEXITCODE=0 }
  - ps: if (-Not $env:APPVEYOR_PULL_REQUEST_NUMBER)                        { MSBuild.SonarQube.Runner.exe end /d:"sonar.login=f79a82dc96828b5a4993b2f2640fca6e322c72a0"; $LASTEXITCODE=0 }

build:
  parallel: true
  project: src\SignhostAPIClient.sln
  publish_nuget: true
  include_nuget_references: true

nuget:
  project_feed: true
  disable_publish_on_pr: false

artifacts:
  - path: '**\*.nupkg'
    name: Nuget

notifications:
  - provider: Webhook
    url: https://webhooks.gitter.im/e/69c5136a745342743ec4
